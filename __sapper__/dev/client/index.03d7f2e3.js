import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, t as text, c as claim_element, a as children, b as claim_text, f as detach_dev, g as add_location, h as insert_dev, j as append_dev, n as noop, k as globals, l as space, m as create_component, q as query_selector_all, o as claim_space, p as claim_component, r as mount_component, u as transition_in, w as transition_out, x as destroy_component } from './client.0a1ef30d.js';

var Mod0 = {"html":"<p>I am a full-stack engineer for the web, games, and apps. I have 15 years of professional experience and have been tinkering with code for much, much longer. Since 2015, I've been the Lead Developer at the <a href=\"https://elab.emerson.edu\">Engagement Lab</a> with previous stints at startups and a major marketing firm.</p>\n<p>Most of my recent work centers around using games and the web to help solve problems in democracy and governance, global health, media literacy, and equity and accessibility.</p>\n<p>I live in Boston with my wife and dog.</p>","metadata":{"title":"About"},"filename":"about.md","path":"/Users/john_richardson/Documents/Projects/about-me/src/routes/content/about.md"};

var all = [
  Mod0
];

/* src/components/Header.svelte generated by Svelte v3.29.0 */

const file = "src/components/Header.svelte";

function create_fragment(ctx) {
	let h1;
	let t;

	const block = {
		c: function create() {
			h1 = element("h1");
			t = text("Johnny Richardson");
			this.h();
		},
		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", {});
			var h1_nodes = children(h1);
			t = claim_text(h1_nodes, "Johnny Richardson");
			h1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file, 51, 0, 1141);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h1, anchor);
			append_dev(h1, t);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(h1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Header", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Header> was created with unknown prop '${key}'`);
	});

	return [];
}

class Header extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Header",
			options,
			id: create_fragment.name
		});
	}
}

/* src/routes/index.svelte generated by Svelte v3.29.0 */

const { console: console_1 } = globals;
const file$1 = "src/routes/index.svelte";

function create_fragment$1(ctx) {
	let t0;
	let header;
	let t1;
	let h3;
	let t2;
	let current;
	header = new Header({ $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			create_component(header.$$.fragment);
			t1 = space();
			h3 = element("h3");
			t2 = text("About");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-14m8q67\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			claim_component(header.$$.fragment, nodes);
			t1 = claim_space(nodes);
			h3 = claim_element(nodes, "H3", {});
			var h3_nodes = children(h3);
			t2 = claim_text(h3_nodes, "About");
			h3_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Johnny Richardson";
			add_location(h3, file$1, 16, 0, 411);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			mount_component(header, target, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, h3, anchor);
			append_dev(h3, t2);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(header.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(header.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			destroy_component(header, detaching);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(h3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);
	const content = all;
	console.log(content);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ all, Header, content });
	return [content];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { content: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$1.name
		});
	}

	get content() {
		return this.$$.ctx[0];
	}

	set content(value) {
		throw new Error("<Routes>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguMDNkN2YyZTMuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLyQkX19fJCQ3NmRlMGRjOTgxNThiOTY2MzBlNWQ5ZTE1NmQ1MWJjMSIsIi4uLy4uLy4uL3NyYy9yb3V0ZXMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNb2QwIGZyb20gJy9Vc2Vycy9qb2huX3JpY2hhcmRzb24vRG9jdW1lbnRzL1Byb2plY3RzL2Fib3V0LW1lL3NyYy9yb3V0ZXMvY29udGVudC9hYm91dC5tZCc7XG5leHBvcnQgZGVmYXVsdCBbXG4gIE1vZDBcbl07IiwiPHNjcmlwdD5cbmltcG9ydCBhbGwgZnJvbSAnLi9jb250ZW50LyoubWQnXG5pbXBvcnQgSGVhZGVyIGZyb20gJy4uL2NvbXBvbmVudHMvSGVhZGVyLnN2ZWx0ZSc7XG5cbmV4cG9ydCBjb25zdCBjb250ZW50ID0gYWxsO1xuY29uc29sZS5sb2coY29udGVudClcbjwvc2NyaXB0PlxuPHN0eWxlPlxuXG48L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5Kb2hubnkgUmljaGFyZHNvbjwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48SGVhZGVyIC8+XG5cbjxoMz5BYm91dDwvaDM+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxVQUFlO0FBQ2YsRUFBRSxJQUFJO0FBQ04sQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztPQ0NZLE9BQU8sR0FBRyxHQUFHO0NBQzFCLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
